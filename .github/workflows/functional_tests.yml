---
name: Functional tests

on:
  workflow_call:
    inputs:
      app_repository:
        description: 'The GIT repository to test (defaults to `github.repository`)'
        required: false
        default: ${{ github.repository }}
        type: string
      app_branch_name:
        description: 'The GIT branch to test (defaults to `github.ref`)'
        required: false
        default: ${{ github.ref }}
        type: string
      run_for_devices:
        description: |
          The list of device(s) on which the test will run.

          Defaults to the full list of device(s) supported by the application as configured in the
          'ledger_app.toml' manifest.
          If the manifest is missing, defaults to ALL (["nanos", "nanox", "nanosp", "stax"]).
        required: false
        default: 'None'
        type: string
      upload_snapshots_on_failure:
        description: 'Enable or disable upload of tests snapshots if the job fails (defaults to true).'
        required: false
        default: true
        type: boolean
      test_filter:
        description: 'Specify an expression which implements a substring match on the test names'
        required: false
        default: '""'
        type: string

jobs:
  call_get_app_metadata:
    # This job digests inputs and repository metadata provided by the `ledger_app.toml` manifest
    # file, in order to output relevant directories, compatible devices, and other variables needed
    # by following jobs.
    name: Retrieve application metadata
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/_get_app_metadata.yml@v1
    with:
      app_repository: ${{ inputs.app_repository }}
      app_branch_name: ${{ inputs.app_branch_name }}
      compatible_devices: ${{ inputs.run_for_devices }}

  functional_tests:
    name: Functional tests
    needs: call_get_app_metadata
    strategy:
      fail-fast: false
      matrix:
        device: ${{ fromJSON(needs.call_get_app_metadata.outputs.compatible_devices) }}
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.app_repository }}
          ref: ${{ inputs.app_branch_name }}
          submodules: recursive

      - name: Set Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install yarn
        uses: borales/actions-yarn@v4
        with:
          cmd: help
          dir: 'ts-tests'

      - name: Install tests dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y qemu-user-static tesseract-ocr libtesseract-dev
          pip install -U pip setuptools
          pip install speculos

      - name: Run test
        run: |
          BIN_DIR_NAME="$(echo ${{ matrix.device }} | sed 's/nanosp/nanos2/')"
          speculos --api-port 5005 ${{ needs.call_get_app_metadata.outputs.build_directory }}/build/${BIN_DIR_NAME}/bin/app.elf --display headless &
          sleep 5
          cd ts-tests
          yarn install --frozen-lockfile
          yarn run test
